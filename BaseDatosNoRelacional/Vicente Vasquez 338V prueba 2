19360397-1

1.- Indique cuantas personas de sexo masculino ganan más de $850.000

db.personas.find(
    {$and:[
        {sueldo:{$gt:850000}},
        {sexo:"Masculino"}
    ]}
).count()

2.- Indique cuantas personas de sexo masculino viven en la comuna de
Santiago.

db.personas.find(
    {$and:[
        {comuna:"Santiago"},
        {sexo:"Masculino"}
    ]}
).count()

3.- Muestre todas las personas que sean Solteros o Solteras y que tengan
cargas familiares.

db.personas.find(
    {$and:[
        {cargasFamiliares: {$gt:0}},
        {$or:[
            {estadoCivil:"Soltero"},
            {estadoCivil:"Soltera"}
        ]}
    ]}
)

4.- Actualice la información de todas las personas que sean Casada o Casado,
si la persona no posee cargas familiares debe quedar con 1 carga familiar.

db.personas.updateMany(
    {$and:[
        {cargasFamiliares: 0},
        {$or:[
            {estadoCivil:"Casado"},
            {estadoCivil:"Casada"}
        ]}
    ]},
    {$set:{cargasFamiliares: 1}}
)

5.- Elimine los documentos de todas las personas que sean de sexo masculino,
solteros, que no tenga cargas familiares y que ganen menos de $420.000

db.personas.deleteMany(
    {$and:[
        {sexo:"Masculino"},
        {estadoCivil:"Soltero"},
        {cargasFamiliares: 0},
        {sueldo:{$lt:420000}}
    ]}
)

6.- Ingrese 3 documentos de personas que vivan en Valdivia.

db.personas.insertMany(
[
    {
        "rut":"15.123.123-7",
        "nombre":"Juan Alberto Soto Diaz",
        "direccion":"Diagonal Oriente 1887",
        "fechaNacimiento": new Date("1970-06-13"),
        "comuna":"Valdivia",
        "correoElectronico":"jasotodiaz@xmail.com",
        "estadoCivil": "Casado",
        "cargasFamiliares" : 0,
        "sexo":"Masculino",
        "sueldo": 500000
    },
    {
        "rut":"15.789.789-7",
        "nombre":"Pedro Antonio Soto Diaz",
        "direccion":"Diagonal Oriente 1887",
        "fechaNacimiento": new Date("1970-06-13"),
        "comuna":"Valdivia",
        "correoElectronico":"pasotodiaz@xmail.com",
        "estadoCivil": "Casado",
        "cargasFamiliares" : 0,
        "sexo":"Masculino",
        "sueldo": 500000
    },
    {
        "rut":"15.456.456-7",
        "nombre":"Sergio Nicolas Soto Diaz",
        "direccion":"Diagonal Oriente 1887",
        "fechaNacimiento": new Date("1970-06-13"),
        "comuna":"Valdivia",
        "correoElectronico":"snsotodiaz@xmail.com",
        "estadoCivil": "Casado",
        "cargasFamiliares" : 0,
        "sexo":"Masculino",
        "sueldo": 500000
    }
])

7.- Muestre los documentos de las personas de sexo masculino ordenados por
su sueldo de forma descendente.

db.personas.find(
    {sexo:"Masculino"}
).sort({sueldo:-1})

8.- Utilizando where muestre las personas que tengan sexo masculino, que
sean solteros, que vivan en Ñuñoa, La Reina, Santiago o Macul y que su sueldo
sea menor a $500.000

db.personas.find(
    {$and:[
        {sexo:"Masculino"},
        {sueldo:{$lt:500000}},
        {estadoCivil:"Soltero"},
        {$or:[
            {comuna: "Ñuñoa"},
            {comuna: "Santiago"},
            {comuna: "Macul"},
            {comuna: "La Reina"},
        ]}
    ]}
)

9.- Muestre todas las personas cuyo correo electrónico sea xmail y que tengan
sexo masculino.

db.personas.find(
    {$and:[
        {correoElectronico:{$regex:/xmail/}},
        {sexo:"Masculino"}
    ]}
)

10.- Muestre la información de todas las personas que hubieran nacido
después del 31-12-1990 que sean de sexo masculino y que tengan más de 1
carga familiar.

db.personas.find(
    {$and:[       
        {cargasFamiliares: {$gt:1}},
        {sexo:"Masculino"},
        {fechaNacimiento: {$gt:new Date("1990-12-31")}}
    ]}
)

